package com.planetkershaw.heatingtest.ui;

import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.support.annotation.NonNull;
import android.support.v7.widget.RecyclerView;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CompoundButton;
import android.widget.RelativeLayout;
import android.widget.Switch;
import android.widget.TextView;

import com.planetkershaw.heatingtest.R;
import com.planetkershaw.heatingtest.zwayservice.DataChangedReceiver;
import com.planetkershaw.heatingtest.zwayservice.LightList;
import com.planetkershaw.heatingtest.zwayservice.TimeService;
import java.util.List;

public class LightListActivity extends BaseListActivity implements Handler.Callback
{
    private SimpleItemRecyclerViewAdapter adapter;

    private Handler.Callback callback;

    private DataChangedReceiver mReceiver;

    @Override
    protected void onResume() {
        super.onResume();
        adapter.notifyDataSetChanged();
        updateData();
    }

    @Override
    protected void onCreate(Bundle savedInstanceState)
    {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_light_list);

        callback = this;

        setupToolBar(R.id.toolbar,"Lights");

        // set up the list of lights
        View recyclerView = findViewById(R.id.light_list);
        assert recyclerView != null;
        adapter = setupRecyclerView((RecyclerView) recyclerView);

        setupMenuDrawer ();

        // register for changes to the data set
        mReceiver = new DataChangedReceiver() {
            public void onReceive(Context context, Intent intent) {
                adapter.notifyDataSetChanged();
                updateData();
            }

        };
        registerReceiver(mReceiver, new IntentFilter(DataChangedReceiver.ACTION_LIGHTING_DATA_CHANGED));
    }

    // display new data
    private void updateData () {
        if (LightList.ITEMS.size() > 0) {
            updateStatus();
        }
    }

    public boolean handleMessage (Message msg) {
        //TODO: need to handle errors

        // we arrive here after a set request, if we force an update
        // of the main data everything should appear up to date

        // NOTE: because of a bug in the zway server, we need to delay
        // the request to give time for the new value to be accepted

        Runnable r = new Runnable() {
                    @Override
                    public void run(){
                        // force an update of the main data
                        TimeService timeService = TimeService.getInstance();
                        if (timeService != null) {
                            timeService.forceRefresh();
                        }
                    }
                };
                Handler h = new Handler();
                h.postDelayed(r, 1000); // <-- the "1000" is the delay time in miliseconds.

        return true;
    }

    // setup the view adapter for the lights list
    private SimpleItemRecyclerViewAdapter setupRecyclerView(@NonNull RecyclerView recyclerView) {
        SimpleItemRecyclerViewAdapter adapter = new SimpleItemRecyclerViewAdapter(LightList.ITEMS);
        recyclerView.setAdapter(adapter);
        return adapter;
    }

    // custom adapter for the lights view (Generated by Android Studio when two pane view chosen)
    public class SimpleItemRecyclerViewAdapter
            extends RecyclerView.Adapter<SimpleItemRecyclerViewAdapter.ViewHolder> {

        private final List<LightList.LightItem> mValues;
        public int selectedPos = 0;
        private View.OnClickListener onoffClickListener;

        public SimpleItemRecyclerViewAdapter(List<LightList.LightItem> items) {
            mValues = items;
        }

        @Override
        public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
            View view = LayoutInflater.from(parent.getContext())
                    .inflate(R.layout.light_list_content, parent, false);
            return new ViewHolder(view);
        }

        @Override
        public void onBindViewHolder(final ViewHolder holder, int position)
        {
            holder.mItem = mValues.get(position);
            holder.mContentView.setText(mValues.get(position).title);
            holder.mTypeView.setText("todo");

            onoffClickListener = new View.OnClickListener() {
                @Override
                public void onClick (View view) {
                    int id = view.getId();
                    boolean turnOn = (id == R.id.onBtn);
                    app.restAPI.lightStatusRequest(new Handler(callback), holder.mItem.id, turnOn);
                }
            };
            holder.mOnBtn.setOnClickListener(onoffClickListener);
            holder.mOffBtn.setOnClickListener(onoffClickListener);
        }

        @Override
        public int getItemCount() {
            return mValues.size();
        }

        public class ViewHolder extends RecyclerView.ViewHolder {
            public final View mView;
            public final TextView mContentView;
            public final TextView mTypeView;
            public final RelativeLayout mLightView;
            public LightList.LightItem mItem;
            public Button mOnBtn;
            public Button mOffBtn;

            public ViewHolder(View view)
            {
                super(view);
                mView = view;
                mContentView = (TextView) view.findViewById(R.id.title);
                mTypeView = (TextView) view.findViewById(R.id.type);
                mLightView = (RelativeLayout) view.findViewById(R.id.item);
                mOnBtn = (Button)view.findViewById(R.id.onBtn);
                mOffBtn = (Button)view.findViewById(R.id.offBtn);
            }

            @Override
            public String toString() {
                return super.toString() + " '" + mContentView.getText() + "'";
            }
        }
    }
}
